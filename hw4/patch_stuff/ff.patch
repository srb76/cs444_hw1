diff -ruN linux-yocto-3.19-clean/arch/x86/syscalls/syscall_32.tbl linux-yocto-3.19/arch/x86/syscalls/syscall_32.tbl
--- linux-yocto-3.19-clean/arch/x86/syscalls/syscall_32.tbl	2017-12-02 15:42:54.259261698 -0800
+++ linux-yocto-3.19/arch/x86/syscalls/syscall_32.tbl	2017-12-02 15:39:51.021032765 -0800
@@ -365,3 +365,4 @@
 356	i386	memfd_create		sys_memfd_create
 357	i386	bpf			sys_bpf
 358	i386	execveat		sys_execveat			stub32_execveat
+359	i386	slob_mem_use		sys_slob_mem_use
\ No newline at end of file
diff -ruN linux-yocto-3.19-clean/include/linux/syscalls.h linux-yocto-3.19/include/linux/syscalls.h
--- linux-yocto-3.19-clean/include/linux/syscalls.h	2017-12-02 15:43:06.787482464 -0800
+++ linux-yocto-3.19/include/linux/syscalls.h	2017-12-02 15:39:14.284387051 -0800
@@ -881,5 +881,5 @@
 asmlinkage long sys_execveat(int dfd, const char __user *filename,
 			const char __user *const __user *argv,
 			const char __user *const __user *envp, int flags);
-
-#endif
+asmlinkage long sys_slob_mem_use(void);
+#endif
\ No newline at end of file
diff -ruN linux-yocto-3.19-clean/mm/slob.c linux-yocto-3.19/mm/slob.c
--- linux-yocto-3.19-clean/mm/slob.c	2017-12-02 15:43:16.631655934 -0800
+++ linux-yocto-3.19/mm/slob.c	2017-12-02 15:38:25.961527564 -0800
@@ -58,6 +58,8 @@
 
 #include <linux/kernel.h>
 #include <linux/slab.h>
+#include <linux/syscalls.h>
+#include <linux/linkage.h>
 
 #include <linux/mm.h>
 #include <linux/swap.h> /* struct reclaim_state */
@@ -630,6 +632,27 @@
 	.align = ARCH_KMALLOC_MINALIGN,
 };
 
+asmlinkage long sys_slob_mem_use(void){
+	long bigpages = 0; /*big pages*/
+	long medpages = 0; /*big pages*/
+	long smallpages = 0; /*big pages*/
+	long size = 0;
+	struct list_head *head; /* head temp */
+	struct page *cursor;
+	unsigned long flags;
+
+	spin_lock_irqsave(&slob_lock, flags);
+
+	head = &free_slob_small;
+	list_for_each_entry(cursor, head, lru) {
+		smallpages++;
+	}
+
+	spin_unlock_irqrestore(&slob_lock, flags);
+
+	return smallpages;
+}
+
 void __init kmem_cache_init(void)
 {
 	kmem_cache = &kmem_cache_boot;
